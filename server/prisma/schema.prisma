generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Route {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  stops         String[]
  buses         Bus[]           @relation("RouteBuses")
  FavoriteRoute FavoriteRoute[]
}

model Bus {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  number    String
  routeId   String?    @db.ObjectId
  route     Route?     @relation("RouteBuses", fields: [routeId], references: [id])
  lat       Float?
  lng       Float?
  occupancy Int        @default(0)
  updates   Tracking[]
}

model Tracking {
  id    String   @id @default(auto()) @map("_id") @db.ObjectId
  busId String   @db.ObjectId
  bus   Bus?     @relation(fields: [busId], references: [id])
  lat   Float
  lng   Float
  time  DateTime @default(now())
}

model User {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  email    String   @unique
  password String
  name     String?
  role     Role     @default(COMMUTER)
  Commuter Commuter?
}

enum Role {
  ADMIN
  DRIVER
  COMMUTER
}

model Commuter {
  id             String          @id @default(auto()) @map("_id") @db.ObjectId
  userId         String?         @unique @db.ObjectId
  user           User?           @relation(fields: [userId], references: [id])
  favoriteRoutes FavoriteRoute[]
}

model FavoriteRoute {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  commuter   Commuter @relation(fields: [commuterId], references: [id])
  commuterId String   @db.ObjectId
  route      Route    @relation(fields: [routeId], references: [id])
  routeId    String   @db.ObjectId
  createdAt  DateTime @default(now())

  @@unique([commuterId, routeId])
}